namespace apache {
    class output {
        var func;
        var request;
        var buffer;

        function output(var request) {
            self.request = request;
            self.func = dlfunc(null, "mod_parrot_write", "ipip");
            self.buffer = new ByteBuffer; // warn then, I dare you
        }

        function puts(string msg) {
            var write = self.func;
            self.buffer =: msg;
            return write(self.buffer, elements(self.buffer), self.request);
        }
    }   
    
    class input {
        var func;
        var request;
        var remaining;
        var buffer;

        function input(var request) {
            self.request = request;
            self.func = dlfunc(null, "mod_parrot_read", "ipip");
            var setupFunc = dlfunc(null, "mod_parrot_setup_input", "ip");
            self.remaining = setupFunc(request);
            self.buffer = new ByteBuffer;
            say(sprintf("I have %d remaining", [ self.remaining ] ));
        }
        
        function readline() {
            // use some buffering mechanism
        }

        function readall() {
            // here, too
        }

        function read(int size) {
            self.buffer =: size;
            var reader = self.func;
            int readBytes = reader(self.buffer, size, self.request);
            self.buffer =: readBytes;
            return self.buffer.get_string("binary"); 
        
        }
    }

    function setup[main](var request) {
        getinterp().stdin_handle(new input(request));
        getinterp().stdout_handle(new output(request));            
    }
}
